test <- model.matrix.subset("relaxedLasso", data = dat_log)




x <- model.matrix.subset("relaxedLasso", data = dat_log)

# activate parallel computing
cl <- makeCluster(detectCores(), type='PSOCK')
registerDoParallel(cl)

# generate 10 folds for outer loop

set.seed(12)
fold.train <- createMultiFolds(y, k = k, times = rep) # ensure that at least 10 samples are in each fold

# split data based on these folds (Fold1 means that Fold1 is used for testing)
train.test.folds <- lapply(c(1:rep), function(split){
  
  # select only folds containing the specified repeat in each iteration
  if(split == 10){
    ind <- names(fold.train) %>% str_detect("Rep10")
    dat <- fold.train[ind]  
  } else {
    ind <- names(fold.train) %>% str_detect(paste("Rep0",split, sep =""))
    dat <- fold.train[ind]
  }
  
  # split data into training and test set with each fold being the test set once
  res <- lapply(c(1:k), function(fold){
    list(x.test = x[-dat[[fold]],], 
         x.train = x[dat[[fold]],],
         y.test = y[-dat[[fold]]],
         y.train = y[dat[[fold]]] 
    )
  })
  return(res)
})

# define name of the list elements
reps <<- paste0("Rep", 1:rep)
folds <<- paste0("Fold", 1:k)
train.test.folds <- setNames(lapply(train.test.folds, setNames, folds), reps)





